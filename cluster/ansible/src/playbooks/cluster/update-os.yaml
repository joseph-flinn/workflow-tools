---
- hosts: "{{ targets }}"
  become: true
  become_user: root
  serial: 1
  tasks:
    - name: Update apt repo and cache on all Debian/Ubuntu boxes
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

    - name: Upgrade all packages on servers
      apt: upgrade=dist force_apt_get=yes

    - name: Check if a reboot is needed on all servers
      register: reboot_required_file
      stat: path=/var/run/reboot-required get_md5=no

    - name: Get tmux sessions
      shell: "tmux ls | wc -l"
      become: true
      become_user: joseph
      register: tmux_session_count

    - name: cordon k8s node
      when: reboot_required_file.stat.exists and tmux_session_count.stdout == "0"
      shell: "microk8s kubectl cordon $(cat /etc/hostname)"

    - name: drain k8s node
      when: reboot_required_file.stat.exists and tmux_session_count.stdout == "0"
      shell: "microk8s kubectl drain $(cat /etc/hostname) --ignore-daemonsets --delete-emptydir-data"

    - name: stop microk8s
      when: reboot_required_file.stat.exists and tmux_session_count.stdout == "0"
      shell: microk8s stop

    - name: Reboot the box if kernel updated and no tmux sessions
      when: reboot_required_file.stat.exists and tmux_session_count.stdout == "0"
      #debug: var=tmux_session_count
      reboot:
        msg: "Reboot initiated by Ansible for kernel updates"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
    
    - name: start microk8s
      when: reboot_required_file.stat.exists and tmux_session_count.stdout == "0"
      shell: microk8s start

    - name: wait for node to become ready
      when: reboot_required_file.stat.exists and tmux_session_count.stdout == "0"
      shell: "microk8s kubectl wait --for=condition=Ready no/$(cat /etc/hostname)"

    - name: uncordon k8s node
      when: reboot_required_file.stat.exists and tmux_session_count.stdout == "0"
      shell: "microk8s kubectl uncordon $(cat /etc/hostname)"

